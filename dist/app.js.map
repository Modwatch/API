{"version":3,"sources":["app.js"],"names":["express","require","bodyParser","cookieParser","methodOverride","session","cors","morgan","app","http","path","jwt","mongoose","configDB","process","env","OPENSHIFT_NODEJS_PORT","OPENSHIFT_NODEJS_IP","getNewLive","DBUSERNAME","DBPASSWORD","getDev","connect","ipaddress","port","corsOptions","origin","methods","set","join","__dirname","use","json","urlencoded","extended","undefined","secret","DBEXPRESSSECRET","resave","saveUninitialized","scriptVersion","0.2","0.3","createServer","listen","get","console","log"],"mappings":"AAAA,YAAA,IAAIA,SAAUC,QAAQ,WAChBC,WAAaD,QAAQ,eACrBE,aAAeF,QAAQ,iBACvBG,eAAiBH,QAAQ,mBACzBI,QAAUJ,QAAQ,mBAClBK,KAAOL,QAAQ,QACfM,OAASN,QAAQ,UACnBO,IAAMR,UAENS,KAAOR,QAAQ,QACfS,KAAOT,QAAQ,QACfU,IAAMV,QAAQ,gBACdW,SAAWX,QAAQ,aAEnBY,QAGHA,UADEC,QAAQC,IAAIC,uBAAyBF,QAAQC,IAAIE,oBACxChB,QAAQ,mBAAmBiB,WAAWJ,QAAQC,IAAII,WAAYL,QAAQC,IAAIK,YAE1EnB,QAAQ,mBAAmBoB,OAAOP,QAAQC,IAAII,WAAYL,QAAQC,IAAIK,YAIlFR,SAASU,QAAQT,SAEjB,IAAIU,WAAYT,QAAQC,IAAIE,qBAAuB,YAC/CO,KAAOV,QAAQC,IAAIC,uBAAyB,KAE5CS,aACFC,QAAQ,EACRC,SAAU,MAAO,QAGnBnB,KAAIoB,IAAI,OAAQJ,MAChBhB,IAAIoB,IAAI,KAAML,WACdf,IAAIoB,IAAI,QAASlB,KAAKmB,KAAKC,UAAW,UACtCtB,IAAIoB,IAAI,cAAe,QACvBpB,IAAIuB,IAAIzB,QACRE,IAAIuB,IAAI7B,WAAW8B,QACnBxB,IAAIuB,IAAI7B,WAAW+B,YAAaC,UAAU,KAC1C1B,IAAIuB,IAAIxB,OAAOO,QAAQC,IAAIE,oBAAsBkB,OAAY,QAC7D3B,IAAIuB,IAAI3B,kBACRI,IAAIuB,IAAI5B,gBACRK,IAAIuB,IAAI1B,SAAS+B,OAAQtB,QAAQC,IAAIsB,gBAAiBC,QAAQ,EAAOC,mBAAmB,KACxF/B,IAAIuB,IAAI/B,QAAO,UAAQU,KAAKmB,KAAKC,UAAW,YAC5CtB,IAAIuB,IAAIzB,KAAKmB,aAEb,IAAIe,gBACFC,GAAO,OACPC,GAAO,QAGTzC,SAAQ,eAAeO,IAAKG,IAAK6B,eAEjC/B,KAAKkC,aAAanC,KAAKoC,OAAOpC,IAAIqC,IAAI,QAASrC,IAAIqC,IAAI,MAAO,WAC5DC,QAAQC,IAAI,+BAAiCvC,IAAIqC,IAAI,MAAQ,IAAMrC,IAAIqC,IAAI","file":"app.js","sourcesContent":["var express = require(\"express\");\n  var bodyParser = require(\"body-parser\");\n  var cookieParser = require(\"cookie-parser\");\n  var methodOverride = require(\"method-override\");\n  var session = require(\"express-session\");\n  var cors = require(\"cors\");\n  var morgan = require(\"morgan\");\nvar app = express();\n\nvar http = require(\"http\");\nvar path = require(\"path\");\nvar jwt = require(\"jsonwebtoken\");\nvar mongoose = require(\"mongoose/\");\n\nvar configDB;\n\nif(process.env.OPENSHIFT_NODEJS_PORT || process.env.OPENSHIFT_NODEJS_IP) {\n\tconfigDB = require(\"../config/db.js\").getNewLive(process.env.DBUSERNAME, process.env.DBPASSWORD);\n} else {\n\tconfigDB = require(\"../config/db.js\").getDev(process.env.DBUSERNAME, process.env.DBPASSWORD);\n\t//var configDB = require(\"../config/db.js\").getLocal(null, null);\n}\n\nmongoose.connect(configDB);\n\nvar ipaddress = process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\";\nvar port = process.env.OPENSHIFT_NODEJS_PORT || 3001;\n\nvar corsOptions = {\n  origin: true,\n  methods: [\"GET\", \"POST\"]\n};\n\napp.set(\"port\", port);\napp.set(\"ip\", ipaddress);\napp.set(\"views\", path.join(__dirname, \"views\"));\napp.set(\"view engine\", \"html\");\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(morgan(process.env.OPENSHIFT_NODEJS_IP ? undefined : \"dev\"));\napp.use(methodOverride());\napp.use(cookieParser());\napp.use(session({secret: process.env.DBEXPRESSSECRET, resave: false, saveUninitialized: false}));\napp.use(express.static(path.join(__dirname, \"public\")));\napp.use(cors(corsOptions));\n\nvar scriptVersion = {\n  \"0.2\": \"0.27\",\n  \"0.3\": \"0.3.1\"\n};\n\nrequire(\"./routes.js\")(app, jwt, scriptVersion);\n\nhttp.createServer(app).listen(app.get(\"port\"), app.get(\"ip\"), function() { \"use strict\";\n  console.log(\"Express server listening at \" + app.get(\"ip\") + \":\" + app.get(\"port\"));\n});\n"],"sourceRoot":"/source/"}